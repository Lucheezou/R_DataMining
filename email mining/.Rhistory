library(tidyverse)
library(ggplot2)
library(GGally)
library(sampling)
library(rpart)
library(rpart.plot)
library(caret)
library(lattice)
library(FSelector)
#import dataset (tiktok playlist)
data <- read.csv("C:\\Users\\Samson\\Documents\\skool\\SE\\Data Mining R code and graphs\\email mining\\emails.csv")
data <- as_tibble(data)
library(tidyverse)
library(ggplot2)
library(GGally)
library(sampling)
library(rpart)
library(rpart.plot)
library(caret)
library(lattice)
library(FSelector)
#import dataset (tiktok playlist)
data <- read.csv("C:\\Users\\Samson\\Documents\\skool\\SE\\Data Mining R code and graphs\\email mining\\emails.csv")
data <- as_tibble(data)
data <- data %>% drop_na() %>% unique() #data now has 4645 objects instead of 5172
#remove unneccessary columns (Email.No.)
data <- data %>% select(-Email.No.)
#making sure all numerical values are numerical not characters
data <- data %>% modify_if(is.character, numeric)
#converting binary class to labels
data$Prediction <- data$Prediction %>% replace(data$Prediction == 0, "NOT SPAM")
data$Prediction <- data$Prediction %>% replace(data$Prediction == 1, "SPAM")
#changing character to factor
data <- data %>%
modify_if(is.character, factor)
#check summary of data
summary(data)
ggplot(data, aes(x=Prediction)) + geom_bar(stat="count")
#the data set contains more spam emails than non spam emails
#we will sample 1200 from each class to balance bias, since the lowest count has about 1500 vectors
#SAMPLE DATA
#stratified sampling of data using the filtered data
#sampling according to Prediction
set.seed(1000)
sample.data <- strata(data, stratanames = "Prediction", size = c(1200,1200), method = "srswor")
sample.data <- data[sample.data$ID_unit,]
#EDA
#check summary of data to see potential noise
summary(sample.data) #no out of the ordinary values to see
#Principal Component Analysis to reduce dimensionality
#!pc <- sample.data %>% select(-c(Prediction)) %>% as.matrix() %>% prcomp()
#checking which columns have the most variance
#!summary(pc)
#!plot(pc, type = "line")
#!str(pc)
#visualizing the PCA
#!data_projected <- as_tibble(pc$x) %>% add_column(Prediction = sample.data$Prediction)
#!ggplot(data_projected, aes(x = PC1, y = PC2, color = Prediction)) +
#!geom_point()
#see occurances of email classes in sample data
ggplot(sample.data, aes(x=Prediction)) + geom_bar(stat="count") #now we have 1200 objects from each Prediction category
tree_default <- sample.data %>% rpart(Prediction ~ ., data = .)
tree_default
rpart.plot(tree_default, extra = 2, roundint=FALSE)
